<!DOCTYPE html>
<html>
<head>
    <title>Email Template</title>
</head>
<body>
    <h1>Hello {name},</h1>
    <p>This is a sample email with dynamic data from Liferay Portlet.</p>
    <p>Event Name: {event_name}</p>
    <p>Event Location: {event_location}</p>
    <img src="cid:logo_image" alt="Logo Image">
</body>
</html>

import com.liferay.mail.kernel.model.MailMessage;
import com.liferay.mail.kernel.service.MailServiceUtil;

// ...

@Override
public void serveResource(ResourceRequest request, ResourceResponse response) {
    String cmd = ParamUtil.getString(request, "cmd");

    if (cmd.equalsIgnoreCase("mailTrigger")) {
        try {
            // Get dynamic data from your Portlet
            String name = "John Doe";
            String eventName = "Sample Event";
            String eventLocation = "Event Venue";

            // Read the HTML template file
            InputStream inputStream = getClass().getResourceAsStream("/path/to/email_template.html");
            String htmlTemplate = new String(inputStream.readAllBytes(), StandardCharsets.UTF_8);
            inputStream.close();

            // Replace placeholders with actual data
            htmlTemplate = htmlTemplate.replace("{name}", name);
            htmlTemplate = htmlTemplate.replace("{event_name}", eventName);
            htmlTemplate = htmlTemplate.replace("{event_location}", eventLocation);

            // Create and send the email
            MailMessage mailMessage = new MailMessage();
            mailMessage.setTo(new InternetAddress("recipient@example.com"));
            mailMessage.setFrom(new InternetAddress("sender@example.com"));
            mailMessage.setSubject("Sample Email with Dynamic Data");
            mailMessage.setHTMLFormat(true);
            mailMessage.setBody(htmlTemplate);

            // Optionally, attach an image to the email (embedded image)
            mailMessage.addFile("path/to/image.jpg", "logo_image");

            MailServiceUtil.sendEmail(mailMessage);

            // Send success response to the frontend
            JSONObject jsonResponse = JSONFactoryUtil.createJSONObject();
            jsonResponse.put("status", "success");
            PrintWriter writer = response.getWriter();
            writer.print(jsonResponse.toString());
        } catch (Exception e) {
            // Handle exception
        }
    }
}
