<section class="light_bg my-0" style="padding: 60px 0;">
  <div class="container">
    <div class="row d-flex align-items-start">
      <div class="col-lg-3">
        <h3 class="sub_heading">Online Training</h3>
        <p class="large_text">Placeholder for text.</p>
      </div>
      <div class="col-lg-9">
        <div class="container online_training">
          <% 
            Date todayDate1 = new Date();
            todayDate1.setHours(0);
            todayDate1.setMinutes(0);
            todayDate1.setSeconds(0);
            List<Events> eventLinks1 = null;
            DynamicQuery dq = EventsLocalServiceUtil.dynamicQuery(); 
            dq.add(RestrictionsFactoryUtil.eq("eventtype", "Training"));
            dq.add(RestrictionsFactoryUtil.eq("trainingpartner", "Online Training"));
            eventLinks1 = EventsLocalServiceUtil.dynamicQuery(dq);

            try {
                eventLinks1= EventsLocalServiceUtil.dynamicQuery(dq, 0,
                  EventsLocalServiceUtil.getEventsesCount());
            } catch (Exception e) {
                e.printStackTrace();
            }
            for (Events eventLink : eventLinks1) {
                String heventtype=eventLink.getEventtype();
                String eventtype=eventLink.getEventtype();
                System.out.println(eventtype);
                long eventid = eventLink.getEventId();
                String eventtype1=eventLink.getEventtype();
                String title = eventLink.getTitle();
                String startTime = eventLink.getStartTime();
                String endTime = eventLink.getEndTime();

                String startDate = "";
                String endDate = "";
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

                try {  
                    Date dt = eventLink.getStartDate();
                    startDate = sdf.format(dt);
                } catch (Exception e) {
                    e.printStackTrace();
                }

                try {  
                    Date dt = eventLink.getEndDate();
                    endDate = sdf.format(dt);
                } catch (Exception e) {
                    e.printStackTrace();
                }
          %> 
          <div class="card">
            <a href="#"><%= title %></a>
            <div class="card-footer">
              <p class="d-flex align-items-center flex-wrap"><span class="me-auto"><%= startDate %></span> <a href="onlinetrainingdetails.html" class="arrow_button">Read More <i class="fa-regular fa-chevrons-right"></i></a></p>
            </div>
          </div>
          <% } %>
        </div>
        <ul id="pagination" class="pagination justify-content-end">
          <!-- Pagination links will be dynamically added here -->
        </ul>
      </div>
    </div>
  </div>
</section>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  $(document).ready(function() {
    var itemsPerPage = 3; // Number of items to display per page

    // Show the items for the given page
    function showItems(page) {
      var startIndex = (page - 1) * itemsPerPage;
      var endIndex = startIndex + itemsPerPage;
      $(".online_training .card").hide().slice(startIndex, endIndex).show();
    }

    // Generate pagination links
    function generatePagination() {
      var totalItems = $(".online_training .card").length; // Total number of items
      var totalPages = Math.ceil(totalItems / itemsPerPage); // Calculate total number of pages
      var pagination = $("#pagination");
      pagination.empty();

      // Previous page link
      if (currentPage > 1) {
        pagination.append('<li class="page-item"><a class="page-link" href="#"><i class="fa-regular fa-chevrons-left"></i></a></li>');
      }

      // Page links
      for (var i = 1; i <= totalPages; i++) {
        var activeClass = (i === currentPage) ? "active" : "";
        pagination.append('<li class="page-item ' + activeClass + '"><a class="page-link" href="#">' + i + '</a></li>');
      }

      // Next page link
      if (currentPage < totalPages) {
        pagination.append('<li class="page-item"><a class="page-link" href="#"><i class="fa-regular fa-chevrons-right"></i></a></li>');
      }
    }

    // Handle page click event
    $("#pagination").on("click", ".page-link", function(e) {
      e.preventDefault();
      var currentPage = parseInt($(this).text());
      showItems(currentPage);
    });

    // Show the initial set of items and generate pagination
    showItems(1);
    generatePagination();
  });
</script>
