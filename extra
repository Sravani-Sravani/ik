<!DOCTYPE html>
<html>
<head>
  <title>Policies and Guidelines</title>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <style>
    /* Add your custom styles here */
  </style>
</head>
<body>
  <main class="main_innerlayout">
    <section>
      <div class="container resources_scroller">
        <div class="main_heading">
          <h1>POLICIES AND GUIDELINES</h1>
        </div>
        <div class="accordion accordion-flush filterbar" id="accordionFlushExample">
          <div class="accordion-item">
            <h2 class="accordion-header" id="flush-headingOne">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                Filter
              </button>
            </h2>
            <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
              <div class="accordion-body">
                <div class="row">
                  <form class="row row-cols-lg-auto align-items-center">
                    <div class="col-auto">
                      <label class="form-label"><span class="text-danger">*</span> Select Subsector</label>
                      <!-- Add your select input code here -->
                    </div>
                    <div class="col-auto">
                      <label class="form-label"><span class="text-danger">*</span>Select Ministry</label>
                      <!-- Add your select input code here -->
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="row">
          <div id="itemContainer">
            <!-- Existing item cards code here -->
          </div>
        </div>
        <div class="row">
          <ul class="pagination justify-content-center mt-2" id="pagination">
            <!-- Pagination links will be added dynamically here -->
          </ul>
        </div>
      </div>
    </section>
  </main>

  <script>
    $(document).ready(function() {
      var itemsPerPage = 9; // Number of items per page
      var items = $("#itemContainer .col-lg-4.col-sm-12.p-2"); // Get all item cards
      var numItems = items.length; // Total number of items
      var numPages = Math.ceil(numItems / itemsPerPage); // Calculate the number of pages
      var currentPage = 1; // Current active page

      // Display the first page and hide the rest
      items.slice(itemsPerPage).hide();

      // Generate pagination links
      var pagination = $("#pagination");
      for (var i = 1; i <= numPages; i++) {
        pagination.append('<li class="page-item"><a href="#" class="page-link">' + i + '</a></li>');
      }

      // Add active class to the first page link
      pagination.find("a:first").addClass("active");

      // Handle click event on pagination links
      pagination.on("click", "a", function(e) {
        e.preventDefault();
        var page = parseInt($(this).text()); // Get the clicked page number
        if (page === currentPage) return; // Ignore if the clicked page is the current active page

        var start = (page - 1) * itemsPerPage;
        var end = start + itemsPerPage;

        // Show/hide the items based on the active page
        items.hide().slice(start, end).show();

        // Update active class for pagination links
        pagination.find("a").removeClass("active");
        $(this).addClass("active");

        currentPage = page; // Update the current page
      });

      // Handle click event on previous button
      pagination.on("click", ".previous", function(e) {
        e.preventDefault();
        if (currentPage === 1) return; // Ignore if the current page is already the first page

        var page = currentPage - 1;
        var start = (page - 1) * itemsPerPage;
        var end = start + itemsPerPage;

        // Show/hide the items based on the active page
        items.hide().slice(start, end).show();

        // Update active class for pagination links
        pagination.find("a").removeClass("active");
        pagination.find("a").eq(page - 1).addClass("active");

        currentPage = page; // Update the current page
      });

      // Handle click event on next button
      pagination.on("click", ".next", function(e) {
        e.preventDefault();
        if (currentPage === numPages) return; // Ignore if the current page is already the last page

        var page = currentPage + 1;
        var start = (page - 1) * itemsPerPage;
        var end = start + itemsPerPage;

        // Show/hide the items based on the active page
        items.hide().slice(start, end).show();

        // Update active class for pagination links
        pagination.find("a").removeClass("active");
        pagination.find("a").eq(page - 1).addClass("active");

        currentPage = page; // Update the current page
      });
    });
  </script>
</body>
</html>
