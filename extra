@Override
	public void serveResource(ResourceRequest request, ResourceResponse response) {
       String cmd = ParamUtil.getString(request, "cmd");
        _log.info("cmd----------->"+cmd);
	if(cmd.equalsIgnoreCase("getsubcategories")) {
		long categoryId = ParamUtil.getLong(request, "categoryId");
		_log.info("categoryId>>"+categoryId);
		try {
			JSONArray jsonArray = JSONFactoryUtil.createJSONArray();
			DynamicQuery dynamicQuery = null;
			dynamicQuery = InfraKnowledgeSubCategoryLocalServiceUtil.dynamicQuery();
		     if(categoryId!=0) {
		         dynamicQuery.add(RestrictionsFactoryUtil.eq("catId", categoryId));
		    }
           dynamicQuery.addOrder(OrderFactoryUtil.asc("SubCategoryName"));
           List<InfraKnowledgeSubCategory> iksList=InfraKnowledgeSubCategoryLocalServiceUtil.dynamicQuery(dynamicQuery, 0, InfraKnowledgeSubCategoryLocalServiceUtil.getInfraKnowledgeSubCategoriesCount());
           //_log.info("iksList.size>>"+iksList.size());
           for(InfraKnowledgeSubCategory data:iksList) {
           	JSONObject jsonOb = JSONFactoryUtil.createJSONObject();
           	jsonOb.put("id", data.getSubcatId());
           	String str = data.getSubCategoryName();
           	 jsonOb.put("name",str);
               jsonArray.put(jsonOb);
               }
                    System.out.println("jsonArray length"+jsonArray.length());
                    PrintWriter writer = response.getWriter();
                    writer.print( jsonArray.toJSONString());
		} catch (Exception e) {
			// TODO: handle exception
		}  
		}
	else if(cmd.equalsIgnoreCase("getministries")) {
		long subcategoryId = ParamUtil.getLong(request, "subcategoryId");
		_log.info("subcategoryId>>"+subcategoryId);
		try {
			JSONArray jsonArray = JSONFactoryUtil.createJSONArray();
			DynamicQuery dynamicQuery = null;
			dynamicQuery = MinistryLocalServiceUtil.dynamicQuery();
		     if(subcategoryId!=0) {
		         dynamicQuery.add(RestrictionsFactoryUtil.eq("subcatId", subcategoryId));
		    }
           dynamicQuery.addOrder(OrderFactoryUtil.asc("mName"));
           List<Ministry> iksList=MinistryLocalServiceUtil.dynamicQuery(dynamicQuery, 0, MinistryLocalServiceUtil.getMinistriesCount());
           //_log.info("iksList.size>>"+iksList.size());
           for(Ministry data:iksList) {
           	JSONObject jsonOb = JSONFactoryUtil.createJSONObject();
           	jsonOb.put("id", data.getMId());
           	String str = data.getMName();
           	 jsonOb.put("name",str);
               jsonArray.put(jsonOb);
               }
                    System.out.println("jsonArray length"+jsonArray.length());
                    PrintWriter writer = response.getWriter();
                    writer.print( jsonArray.toJSONString());
		} catch (Exception e) {
			// TODO: handle exception
		}  
		}
	}
	
