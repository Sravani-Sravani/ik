package com.kpmg.VisitorCount.portlet;
import com.kpmg.citizenTables.model.Visitor;
import com.kpmg.citizenTables.model.impl.VisitorImpl;
import com.kpmg.citizenTables.service.VisitorLocalService;
import com.kpmg.citizenTables.service.VisitorLocalServiceUtil;
import com.kpmg.VisitorCount.constants.VisitorCountPortletKeys;
import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
import com.liferay.portal.kernel.util.SessionClicks;
import com.liferay.portal.kernel.util.PortalUtil;
import java.io.IOException;
import javax.servlet.http.HttpSession;
import javax.portlet.Portlet;
import javax.portlet.PortletException;
import javax.portlet.ProcessAction;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;

import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;

/**
 * @author ksravani1
 */
@Component(
	immediate = true,
	property = {
		"com.liferay.portlet.display-category=category.sample",
		"com.liferay.portlet.header-portlet-css=/css/main.css",
		"com.liferay.portlet.instanceable=true",
		"javax.portlet.display-name=VisitorCount",
		"javax.portlet.init-param.template-path=/",
		"javax.portlet.init-param.view-template=/view.jsp",
		"javax.portlet.name=" + VisitorCountPortletKeys.VISITORCOUNT,
		"javax.portlet.resource-bundle=content.Language",
		"javax.portlet.security-role-ref=power-user,user"
	},
	service = Portlet.class
)
public class VisitorCountPortlet extends MVCPortlet {
	  private static final String SESSION_ATTRIBUTE_KEY = "com.kpmg.visitorcount.visited";

	    @Reference
	    private VisitorLocalService visitorLocalService;

	    @Override
	    public void render(RenderRequest renderRequest, RenderResponse renderResponse) throws PortletException {
	        int visitorCount = getVisitorCount();
	        System.out.println(visitorCount);
	        renderRequest.setAttribute("visitorCount", visitorCount);
	        try {
				super.render(renderRequest, renderResponse);
			} catch (IOException e) {
				e.printStackTrace();
			}
	    }
	    public void incrementVisitorCount(ActionRequest actionRequest, ActionResponse actionResponse) {
	        HttpSession session = PortalUtil.getHttpServletRequest(actionRequest).getSession();

	        if (session.getAttribute(SESSION_ATTRIBUTE_KEY) == null) {
	            visitorLocalService.incrementVisitorCount();
	            session.setAttribute(SESSION_ATTRIBUTE_KEY, true);
	        }
	    }
	
	    private int getVisitorCount() {
	        return visitorLocalService.getVisitorsCount();
	    }
}
